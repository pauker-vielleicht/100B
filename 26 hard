#include <iostream>
#include <fstream>

using namespace std;

struct fraction {
    int numerator;
    int denominator;
    double value;
    void set_value() {
        value = double(numerator) / double(denominator);
    }
};

void quickSort(fraction arr[], int left, int right) {
    double pivot = (arr[left].value + arr[right].value) / 2;
    int i = left;
    int j = right;

    while (i <= j) {
        while (arr[i].value < pivot)
            i++;
        while (pivot < arr[j].value)
            j--;
        if (i <= j) {
            fraction temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            i++;
            j--;
        }
    }

    if (left < j)
        quickSort(arr, left, j);
    if (i < right)
        quickSort(arr, i, right);
}

int main() {
    ifstream inputFile("input.txt");
    if (!inputFile) {
        return 1;
    }

    int n, k;
    inputFile >> n >> k;
    int arr[n];
    for (int i = 0; i < n; ++i) {
        inputFile >> arr[i];
    }
    inputFile.close();

    int size = n * (n - 1) / 2, temp = 0;
    fraction frac[size];
    for (int i = 0; i < n; ++i) {
        for (int j = i + 1; j < n; ++j) {
            frac[temp].numerator = arr[i];
            frac[temp].denominator = arr[j];
            frac[temp].set_value();
            temp++;
        }
    }

    quickSort(frac, 0, size - 1);
    cout << frac[k - 1].numerator << " " << frac[k - 1].denominator << endl;

    return 0;
}
