#include <iostream>
#include <vector>

using namespace std;

int lower_bound(const vector<int>& arr, int left) {
    int left = 0, right = arr.size();
    while (left < right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] < left)
            left = mid + 1;
        else
            right = mid;
    }
    return left;
}

int upper_bound(const vector<int>& arr, int right) {
    int left = 0, right = arr.size();
    while (left < right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] <= right)
            left = mid + 1;
        else
            right = mid;
    }
    return left;
}

int main() {
    int n;
    cin >> n;

    vector<int> arr(n);
    for (int i = 0; i < n; ++i) {
        cin >> arr[i];
    }

    int q;
    cin >> q;

    while (q--) {
        int left, right;
        cin >> left >> right;

        int lower = lower_bound(arr, left);
        int upper = upper_bound(arr, right);

        int count = upper - lower;

        cout << count << endl;
    }

    return 0;
}
